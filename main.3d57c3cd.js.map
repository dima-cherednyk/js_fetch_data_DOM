{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","url","getPhones","fetch","then","response","ok","json","Promise","reject","printList","value","ul","createElement","i","length","li","textContent","name","append","logError","error","setTimeout","console","warn","getPhonesDetails","phones","key","slice","id","catch","logErrorDetails"],"mappings":";AAEA,aA8DC,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA5DD,IAAMA,EAAOC,SAASC,cAAc,QAC9BC,EACF,wEAEEC,EAAY,WACTC,OAAAA,MAAMF,GACVG,KAAK,SAAAC,GACA,OAACA,EAASC,GAIPD,EAASE,OAHPC,QAAQC,OAAf,gCAWR,SAASC,EAAUC,GAGZ,IAFCC,IAAAA,EAAKb,SAASc,cAAc,MAEzBC,EAAI,EAAGA,EAAIH,EAAMI,OAAQD,IAAK,CAC/BE,IAAAA,EAAKjB,SAASc,cAAc,MAElCG,EAAGC,YAAcN,EAAMG,GAAGI,KAC1BN,EAAGO,OAAOH,GAEZlB,EAAKqB,OAAOP,GAGd,SAASQ,EAASC,GAChBC,WAAW,WACTC,QAAQC,KAAKH,IACZ,KAML,SAASI,EAAiBC,GACNA,IADc,EACrBC,EAAOD,EAAAA,EAAAA,GADc,IACN,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAfC,OAAAA,EAAAA,EADqB,EAAA,MAGrBxB,MAASF,GAAAA,OAAAA,EAAI2B,MAAM,GAAI,GAAMD,KAAAA,OAAAA,EAAIE,GAAjC,UACJzB,KAAK,SAAAC,GACA,OAACA,EAASC,GAIPD,EAASE,OAHPC,QAAQC,OAAf,iCAQLqB,MAAMC,GAdqB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,KAkBlC,SAASA,EAAgBV,GACvBE,QAAQC,KAAKH,GA5CfnB,IACGE,KAAKM,GACLoB,MAAMV,GAoBTlB,IACGE,KAAKqB","file":"main.3d57c3cd.js","sourceRoot":"..\\src","sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable prefer-promise-reject-errors */\n'use strict';\n\nconst body = document.querySelector('body');\nconst url\n  = 'https://mate-academy.github.io/phone-catalogue-static/api/phones.json';\n\nconst getPhones = () => {\n  return fetch(url)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(`Can't load list of phones`);\n      };\n\n      return response.json();\n    });\n};\n\ngetPhones()\n  .then(printList)\n  .catch(logError);\n\nfunction printList(value) {\n  const ul = document.createElement('ul');\n\n  for (let i = 0; i < value.length; i++) {\n    const li = document.createElement('li');\n\n    li.textContent = value[i].name;\n    ul.append(li);\n  };\n  body.append(ul);\n};\n\nfunction logError(error) {\n  setTimeout(() => {\n    console.warn(error);\n  }, 5000);\n};\n\ngetPhones()\n  .then(getPhonesDetails);\n\nfunction getPhonesDetails(phones) {\n  for (const key of phones) {\n    const getDetails = () => {\n      return fetch(`${url.slice(0, -5)}/${key.id}.json`)\n        .then(response => {\n          if (!response.ok) {\n            return Promise.reject(`Can't load details of phone`);\n          };\n\n          return response.json();\n        });\n    };\n\n    getDetails()\n      .catch(logErrorDetails);\n  };\n};\n\nfunction logErrorDetails(error) {\n  console.warn(error);\n};\n"]}